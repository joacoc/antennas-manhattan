version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  materialized:
    image: materialize/materialized:v0.20.0
    container_name: materialized
    restart: always
    ports:
      - 6875:6875
    depends_on:
      - postgres

  grafana_dashboard:
    image: materialize/dashboard
    container_name: grafana_dashboard
    restart: always
    ports:
      - 3001:3000
    depends_on:
      - materialized
    environment:
      MATERIALIZED_URL: materialized:6875

  helper:
    container_name: helper
    build:
      context: ./helper
    depends_on:
      - materialized

  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - 4000:4000
    depends_on:
      - materialized

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - 3000:3000
    depends_on:
      - backend

  microservice:
    container_name: microservice
    build:
      context: ./microservice
    depends_on:
      - backend
